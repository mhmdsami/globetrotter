// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model Destination {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  clues     String[]
  funFacts  String[]
  trivia    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("destinations")
}

model User {
  id                 String        @id @default(auto()) @map("_id") @db.ObjectId
  username           String        @unique
  score              Int           @default(0)
  gameSessions       GameSession[]
  createdChallenges  Challenge[]   @relation(name: "CreatorRelation")
  receivedChallenges Challenge[]   @relation(name: "OpponentRelation")
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @default(now()) @updatedAt

  @@map("users")
}

type Game {
  destinationId String  @db.ObjectId
  hasGuessed    Boolean
}

model GameSession {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  user              User        @relation(fields: [userId], references: [id])
  userId            String      @db.ObjectId
  score             Int
  games             Game[]
  createdChallenge  Challenge[] @relation(name: "CreatorSessionRelation")
  receivedChallenge Challenge[] @relation(name: "OpponentSessionRelation")
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @default(now()) @updatedAt

  @@map("sessions")
}

model Challenge {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId
  creator          User        @relation(name: "CreatorRelation", fields: [creatorId], references: [id])
  creatorId        String      @db.ObjectId
  creatorSession   GameSession @relation(name: "CreatorSessionRelation", fields: [creatorSessionId], references: [id])
  creatorSessionId String      @db.ObjectId
  player           User        @relation(name: "OpponentRelation", fields: [playerId], references: [id])
  playerId         String      @db.ObjectId
  playerSession    GameSession @relation(name: "OpponentSessionRelation", fields: [playerSessionId], references: [id])
  playerSessionId  String      @db.ObjectId
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @default(now()) @updatedAt

  @@map("challenges")
}
